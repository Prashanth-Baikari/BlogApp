{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LoginService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseURL = \"http://localhost:8008\";\n  }\n  loginUser(logindata) {\n    return this.httpClient.post(`${this.baseURL}/login`, logindata);\n  }\n  isAuthenticated() {\n    console.log(\"in isAuthenticated \");\n    if (localStorage.length != null) return true;else return false;\n  }\n}\n_class = LoginService;\n_class.ɵfac = function LoginService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["LoginService","constructor","httpClient","baseURL","loginUser","logindata","post","isAuthenticated","console","log","localStorage","length","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\61093529\\Desktop\\BlogApp\\Frontend\\BlogApplication\\src\\app\\login.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { loginData } from './loginData';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  private baseURL=\"http://localhost:8008\";\n\n  constructor(private httpClient: HttpClient) { }\n\n  loginUser(logindata: loginData):Observable<any>{\n    return this.httpClient.post(`${this.baseURL}/login`,logindata);\n  }\n\n  isAuthenticated(){\n    console.log(\"in isAuthenticated \")\n    if(localStorage.length!=null)\n      return true;\n    else\n        return false;\n  }\n\n}\n"],"mappings":";;;AAQA,OAAM,MAAOA,YAAY;EAGvBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAFtB,KAAAC,OAAO,GAAC,uBAAuB;EAEO;EAE9CC,SAASA,CAACC,SAAoB;IAC5B,OAAO,IAAI,CAACH,UAAU,CAACI,IAAI,CAAC,GAAG,IAAI,CAACH,OAAO,QAAQ,EAACE,SAAS,CAAC;EAChE;EAEAE,eAAeA,CAAA;IACbC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAClC,IAAGC,YAAY,CAACC,MAAM,IAAE,IAAI,EAC1B,OAAO,IAAI,CAAC,KAEV,OAAO,KAAK;EAClB;;SAfWX,YAAY;;mBAAZA,MAAY,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAZf,MAAY;EAAAgB,OAAA,EAAZhB,MAAY,CAAAiB,IAAA;EAAAC,UAAA,EAFX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}