{"ast":null,"code":"var _class;\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ViewmyblogsService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseURL = \"http://localhost:8008\";\n  }\n  getUserId() {\n    let headers = new HttpHeaders().set(\"Authorization\", `Bearer ${localStorage.getItem(`token`)}`);\n    return this.httpClient.get(`${this.baseURL}/getuserid`, {\n      headers\n    });\n  }\n  viewMyBlogs() {\n    this.getUserId().subscribe(data => {\n      this.uid = data;\n      console.log(\"User Id in subscribe\", data);\n    });\n    console.log(\"User Id\", this.uid);\n    let headers = new HttpHeaders().set(\"Authorization\", `Bearer ${localStorage.getItem(`token`)}`);\n    return this.httpClient.get(`${this.baseURL}/myposts/${this.uid}`, {\n      headers\n    });\n  }\n}\n_class = ViewmyblogsService;\n_class.ɵfac = function ViewmyblogsService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","ViewmyblogsService","constructor","httpClient","baseURL","getUserId","headers","set","localStorage","getItem","get","viewMyBlogs","subscribe","data","uid","console","log","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\61093529\\Desktop\\BlogApp\\Frontend\\BlogApplication\\src\\app\\viewmyblogs.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Post } from './Post';\nimport { LoginComponent } from './login/login.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ViewmyblogsService  {\n  private baseURL=\"http://localhost:8008\";\n\n  constructor(private httpClient: HttpClient) { }\n\n  getUserId():Observable<any>{\n     \n   let headers= new HttpHeaders().set(\"Authorization\",`Bearer ${localStorage.getItem(`token`)}`)\n    return this.httpClient.get(`${this.baseURL}/getuserid`,{headers})\n  }\n   uid: any\n  viewMyBlogs():Observable<Post[]> {\n      this.getUserId().subscribe(data=>{\n        this.uid=data\n        console.log(\"User Id in subscribe\",data);\n      })\n      console.log(\"User Id\",this.uid);\n      let headers= new HttpHeaders().set(\"Authorization\",`Bearer ${localStorage.getItem(`token`)}`)\n     return this.httpClient.get<Post[]>(`${this.baseURL}/myposts/${this.uid}`, {headers});\n  }\n}\n"],"mappings":";AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAS9D,OAAM,MAAOC,kBAAkB;EAG7BC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAFtB,KAAAC,OAAO,GAAC,uBAAuB;EAEO;EAE9CC,SAASA,CAAA;IAER,IAAIC,OAAO,GAAE,IAAIN,WAAW,EAAE,CAACO,GAAG,CAAC,eAAe,EAAC,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC;IAC5F,OAAO,IAAI,CAACN,UAAU,CAACO,GAAG,CAAC,GAAG,IAAI,CAACN,OAAO,YAAY,EAAC;MAACE;IAAO,CAAC,CAAC;EACnE;EAEAK,WAAWA,CAAA;IACP,IAAI,CAACN,SAAS,EAAE,CAACO,SAAS,CAACC,IAAI,IAAE;MAC/B,IAAI,CAACC,GAAG,GAACD,IAAI;MACbE,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAACH,IAAI,CAAC;IAC1C,CAAC,CAAC;IACFE,OAAO,CAACC,GAAG,CAAC,SAAS,EAAC,IAAI,CAACF,GAAG,CAAC;IAC/B,IAAIR,OAAO,GAAE,IAAIN,WAAW,EAAE,CAACO,GAAG,CAAC,eAAe,EAAC,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC;IAC9F,OAAO,IAAI,CAACN,UAAU,CAACO,GAAG,CAAS,GAAG,IAAI,CAACN,OAAO,YAAY,IAAI,CAACU,GAAG,EAAE,EAAE;MAACR;IAAO,CAAC,CAAC;EACvF;;SAnBWL,kBAAkB;;mBAAlBA,MAAkB,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAlBnB,MAAkB;EAAAoB,OAAA,EAAlBpB,MAAkB,CAAAqB,IAAA;EAAAC,UAAA,EAFjB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}