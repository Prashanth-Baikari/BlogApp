{"ast":null,"code":"var _class;\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./login/login.component\";\nexport class CreateBlogService {\n  constructor(httpClient, loginComponent) {\n    this.httpClient = httpClient;\n    this.loginComponent = loginComponent;\n    this.baseURL = \"http://localhost:8008\";\n    this.username = this.loginComponent.getLoggedInUser();\n  }\n  getUserId() {\n    this.httpClient.get(`${this.baseURL}/getuserid`, this.username).subscribe(data => {\n      this.uid = data;\n    });\n  }\n  createblog(post) {\n    let headers = new HttpHeaders().set(\"Authorization\", `Bearer ${localStorage.getItem(`token`)}`);\n    return this.httpClient.post(`${this.baseURL}/createpost/${this.uid}`, post, {\n      headers\n    });\n  }\n}\n_class = CreateBlogService;\n_class.ɵfac = function CreateBlogService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.LoginComponent));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","CreateBlogService","constructor","httpClient","loginComponent","baseURL","username","getLoggedInUser","getUserId","get","subscribe","data","uid","createblog","post","headers","set","localStorage","getItem","i0","ɵɵinject","i1","HttpClient","i2","LoginComponent","factory","ɵfac","providedIn"],"sources":["C:\\Users\\61093529\\Desktop\\BlogApp\\Frontend\\BlogApplication\\src\\app\\create-blog.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Post } from './Post';\nimport { Observable } from 'rxjs';\nimport { LoginComponent } from './login/login.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CreateBlogService {\n  private baseURL=\"http://localhost:8008\";\n\n  constructor(private httpClient: HttpClient, private loginComponent: LoginComponent ) { }\n  uid:any\n  username:any = this.loginComponent.getLoggedInUser();\n\n  getUserId(){\n     this.httpClient.get(`${this.baseURL}/getuserid`, this.username).subscribe(data =>{\n      this.uid=data;\n    });\n  }\n\n  createblog(post: Post):Observable<object>{\n    let headers= new HttpHeaders()\n    .set(\"Authorization\",`Bearer ${localStorage.getItem(`token`)}`);\n   return this.httpClient.post(`${this.baseURL}/createpost/${this.uid}` ,post,{headers});\n  }\n}\n"],"mappings":";AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;;AAS9D,OAAM,MAAOC,iBAAiB;EAG5BC,YAAoBC,UAAsB,EAAUC,cAA8B;IAA9D,KAAAD,UAAU,GAAVA,UAAU;IAAsB,KAAAC,cAAc,GAAdA,cAAc;IAF1D,KAAAC,OAAO,GAAC,uBAAuB;IAIvC,KAAAC,QAAQ,GAAO,IAAI,CAACF,cAAc,CAACG,eAAe,EAAE;EAFmC;EAIvFC,SAASA,CAAA;IACN,IAAI,CAACL,UAAU,CAACM,GAAG,CAAC,GAAG,IAAI,CAACJ,OAAO,YAAY,EAAE,IAAI,CAACC,QAAQ,CAAC,CAACI,SAAS,CAACC,IAAI,IAAG;MAChF,IAAI,CAACC,GAAG,GAACD,IAAI;IACf,CAAC,CAAC;EACJ;EAEAE,UAAUA,CAACC,IAAU;IACnB,IAAIC,OAAO,GAAE,IAAIf,WAAW,EAAE,CAC7BgB,GAAG,CAAC,eAAe,EAAC,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC;IAChE,OAAO,IAAI,CAACf,UAAU,CAACW,IAAI,CAAC,GAAG,IAAI,CAACT,OAAO,eAAe,IAAI,CAACO,GAAG,EAAE,EAAEE,IAAI,EAAC;MAACC;IAAO,CAAC,CAAC;EACtF;;SAjBWd,iBAAiB;;mBAAjBA,MAAiB,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,cAAA;AAAA;;SAAjBvB,MAAiB;EAAAwB,OAAA,EAAjBxB,MAAiB,CAAAyB,IAAA;EAAAC,UAAA,EAFhB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}