{"ast":null,"code":"var _class;\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ViewmyblogsService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseURL = \"http://localhost:8008\";\n  }\n  getUserId() {\n    let headers = new HttpHeaders().set(\"Authorization\", `Bearer ${localStorage.getItem(`token`)}`);\n    return this.httpClient.get(`${this.baseURL}/getuserid`, {\n      headers\n    });\n  }\n  getMyBlogs(uid) {\n    console.log(\"user  id\", uid);\n    this.getUserId().subscribe(data => {\n      uid = data;\n      console.log(\"user id in getmyblogs\", uid);\n    });\n    let headers = new HttpHeaders().set(\"Authorization\", `Bearer ${localStorage.getItem(`token`)}`);\n    return this.httpClient.get(`${this.baseURL}/myposts/${uid}`, {\n      headers\n    });\n  }\n}\n_class = ViewmyblogsService;\n_class.ɵfac = function ViewmyblogsService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","ViewmyblogsService","constructor","httpClient","baseURL","getUserId","headers","set","localStorage","getItem","get","getMyBlogs","uid","console","log","subscribe","data","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\61093529\\Desktop\\BlogApp\\Frontend\\BlogApplication\\src\\app\\viewmyblogs.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Post } from './Post';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ViewmyblogsService  {\n  private baseURL=\"http://localhost:8008\";\n\n  constructor(private httpClient: HttpClient) { }\n\n  getUserId():Observable<any>{\n   let headers= new HttpHeaders().set(\"Authorization\",`Bearer ${localStorage.getItem(`token`)}`)\n    return this.httpClient.get(`${this.baseURL}/getuserid`,{headers})\n    }\n        \n  getMyBlogs(uid:any):Observable<Post[]>{\n    console.log(\"user  id\",uid)\n    this.getUserId().subscribe((data)=>{\n      uid=data\n      console.log(\"user id in getmyblogs\",uid)\n     \n    })\n    let headers= new HttpHeaders().set(\"Authorization\",`Bearer ${localStorage.getItem(`token`)}`)\n   return this.httpClient.get<Post[]>(`${this.baseURL}/myposts/${uid}`, {headers});  \n    \n  }\n\n\n}\n"],"mappings":";AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAQ9D,OAAM,MAAOC,kBAAkB;EAG7BC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAFtB,KAAAC,OAAO,GAAC,uBAAuB;EAEO;EAE9CC,SAASA,CAAA;IACR,IAAIC,OAAO,GAAE,IAAIN,WAAW,EAAE,CAACO,GAAG,CAAC,eAAe,EAAC,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC;IAC5F,OAAO,IAAI,CAACN,UAAU,CAACO,GAAG,CAAC,GAAG,IAAI,CAACN,OAAO,YAAY,EAAC;MAACE;IAAO,CAAC,CAAC;EACjE;EAEFK,UAAUA,CAACC,GAAO;IAChBC,OAAO,CAACC,GAAG,CAAC,UAAU,EAACF,GAAG,CAAC;IAC3B,IAAI,CAACP,SAAS,EAAE,CAACU,SAAS,CAAEC,IAAI,IAAG;MACjCJ,GAAG,GAACI,IAAI;MACRH,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAACF,GAAG,CAAC;IAE1C,CAAC,CAAC;IACF,IAAIN,OAAO,GAAE,IAAIN,WAAW,EAAE,CAACO,GAAG,CAAC,eAAe,EAAC,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC;IAC9F,OAAO,IAAI,CAACN,UAAU,CAACO,GAAG,CAAS,GAAG,IAAI,CAACN,OAAO,YAAYQ,GAAG,EAAE,EAAE;MAACN;IAAO,CAAC,CAAC;EAEhF;;SApBWL,kBAAkB;;mBAAlBA,MAAkB,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAlBnB,MAAkB;EAAAoB,OAAA,EAAlBpB,MAAkB,CAAAqB,IAAA;EAAAC,UAAA,EAFjB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}